"""
This type stub file was generated by pyright.
"""

_get_module_path = ...
_get_abs_path = ...
DEFAULT_IDF = ...
class KeywordExtractor:
    STOP_WORDS = ...
    def set_stop_words(self, stop_words_path): # -> None:
        ...
    
    def extract_tags(self, *args, **kwargs):
        ...
    


class IDFLoader:
    def __init__(self, idf_path=...) -> None:
        ...
    
    def set_new_path(self, new_idf_path): # -> None:
        ...
    
    def get_idf(self): # -> tuple[dict[Any, Any], float | Any]:
        ...
    


class TFIDF(KeywordExtractor):
    def __init__(self, idf_path=...) -> None:
        ...
    
    def set_idf_path(self, idf_path): # -> None:
        ...
    
    def extract_tags(self, sentence, topK=..., withWeight=..., allowPOS=..., withFlag=...): # -> list[tuple[Any, Any]] | list[Any]:
        """
        Extract keywords from sentence using TF-IDF algorithm.
        Parameter:
            - topK: return how many top keywords. `None` for all possible words.
            - withWeight: if True, return a list of (word, weight);
                          if False, return a list of words.
            - allowPOS: the allowed POS list eg. ['ns', 'n', 'vn', 'v','nr'].
                        if the POS of w is not in this list,it will be filtered.
            - withFlag: only work with allowPOS is not empty.
                        if True, return a list of pair(word, weight) like posseg.cut
                        if False, return a list of words
        """
        ...
    


